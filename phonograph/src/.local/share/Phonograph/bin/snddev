#!/bin/bash
##################################################################
## Prepare Phonogram for record to DAT
##
## Set sound channal
##
## wocson (c)
##
##################################################################
# ver 0.1.0
[[ -f "./Makefile" ]] && DEBUG="YES" || DEBUG="NO"; [[ "${DEBUG^^}" == "YES" ]] && PRFXDIR="$PWD/src" || PRFXDIR="$HOME" # $PRFXDIR

if [[ $(uname) != "FreeBSD" ]]; then echo "Sorry, command 'sound' work for FreeBSD only."; exit; fi

DEVDIR="/dev"
SHAREDIR="$PRFXDIR/.local/share/Phonograph"
LIBDIR="$SHAREDIR/lib"
DOCDIR="$SHAREDIR/doc"

source "$LIBDIR"/tcolor_inc.lib
source "$DOCDIR"/help.src
ERR=${BYELLOW}${BGRED};

dlm="======================================================="

SETPAR="NO"
SETDEFCH="NO"
SETDEFAUTO="NO"

NDEVICE=-1      # Def dev
DEFCH=-1
MXCH=-1
FREQDIS=48000   # Freq. dev

function Error()
{
    printf "${ERR} ERROR: %s ${NORMAL}\n" "$1"
}

getdevsnd()
{
    [[ $SILENT ]] && return

    local i=0

    while read -r devsnd; do
        DevSnd[$i]="$devsnd"

        if grep -q "default" <<<"$devsnd"; then DEFCH="$i"; fi

        DevSnd[$i]="$( echo "$devsnd" | cut -f1 -d':' )"
        let i++

    done < <(cat "$DEVDIR/sndstat" | egrep -i "pcm" | sort);
    let i--; MXCH=$i

    if [[ "$MXCH" == "-1" ]]; then
        Error "Sound devices not find!"
        exit -1
    fi
}

statinfo()
{
    echo
    cat "$DEVDIR/sndstat"
    echo
}

getsndinfo()
{
    [[ $SILENT ]] && return
    
    if (( "$1" >= 0 && "$1" <= "$MXCH" )); then
        if [[ "$1" == "all" ]]; then 
            ndev=""
        else 
            ndev=".$1"; 
        fi
    else
        Error "Number device if wrong"
        exit -1
    fi

    echo -e "\nGet info from $1 (default ch: $DEFCH) sound channel:\n"

    OUTXT="$(sysctl dev.pcm$ndev)\n"
    OUTXT+="=======================================\n"
    OUTXT+="$(sysctl hw.snd.default_unit)\n"
    OUTXT+="$(sysctl hw.snd.default_auto)\n"

    echo -e "$OUTXT"
}

if [[ "$#" == "0" ]]; then help sound; exit; fi

case "$1" in
get)
    getdevsnd
    if [[ -n "$2" ]]; then
        if [[ "$2" == "all" ]]; then
            getsndinfo "all"
        elif [[ "$2" == "sys" ]]; then
            statinfo
        elif [[ "$2" == "def" ]]; then
            getsndinfo "$DEFCH"
        else
            getsndinfo "$2"
        fi
    else
        getsndinfo "$DEFCH" #get def device
    fi
;;
set)
    if [[ -n "$2" ]]; then
        SETPAR="YES"
        getdevsnd
        NDEVICE=$2

        if [[ -n "$3" ]]; then
            case "$3" in
            DAT)   FREQDIS=48000;;
            CD)    FREQDIS=44100;;
            LONG)  FREQDIS=32000;;
            *) FREQDIS=$3;;
            esac

            if [[ -n "$4" ]]; then
                if [[ "$4" == "def" ]]; then
                    SETDEFCH="YES"
                else [[ "$4" == "auto" ]]
                    SETDEFCH="YES"
                    SETDEFAUTO="YES"
                fi
            fi

            getsndinfo $NDEVICE

            if [[ "$SETPAR" == "YES" ]]; then
                echo -e "$dlm"
                sudo sysctl dev.pcm.$NDEVICE.play.vchanrate=$FREQDIS

                if [[ "$SETDEFCH" == "YES" ]]; then 
                    sudo sysctl hw.snd.default_unit=$NDEVICE 
                fi

                if [[ "$SETDEFAUTO" == "YES" ]]; then 
                    sudo sysctl hw.snd.default_auto=1
                else 
                    sudo sysctl hw.snd.default_auto=0
                fi
                echo -e "$dlm"
            fi

            getsndinfo $NDEVICE

        else
            Error "Frequiency not set"
            help sound
        fi
    else
        Error "Sound channel not set"
        help sound
    fi
;;
-h)
;&
*)
    help sound
    exit 0
;;
esac

[[ $SILENT ]] || echo -e "$dlm"

