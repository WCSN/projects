##########################################################################
##
## tcolor_inc.lib
## include
##
# Дополнительные свойства для текcта:
BOLD='\033[1m'            #  ${BOLD}      # жирный шрифт (интенсивный цвет)
DBOLD='\033[2m'           #  ${DBOLD}    # полу яркий цвет (тёмно-серый, независимо от цвета)
NBOLD='\033[22m'          #  ${NBOLD}    # установить нормальную интенсивность
UNDERLINE='\033[4m'       #  ${UNDERLINE}  # подчеркивание
NUNDERLINE='\033[4m'      #  ${NUNDERLINE}  # отменить подчеркивание
BLINK='\033[5m'           #  ${BLINK}    # мигающий
NBLINK='\033[5m'          #  ${NBLINK}    # отменить мигание
INVERSE='\033[7m'         #  ${INVERSE}    # реверсия (знаки приобретают цвет фона, а фон -- цвет знаков)
NINVERSE='\033[7m'        #  ${NINVERSE}    # отменить реверсию

# Reset
BREAK='\033[m'            # все атрибуты по умолчанию
NORMAL='\033[0m'		  # все атрибуты по умолчанию
CLSTD='\033[0m'			  # все атрибуты по умолчанию
STDCL='\033[0m'			  # все атрибуты по умолчанию

# Regular Colors
BLACK='\033[0;30m'        # Black
RED='\033[0;31m'          # Red
GREEN='\033[0;32m'        # Green
YELLOW='\033[0;33m'       # Yellow
BROWN='\033[0;33m'        # Yellow
BLUE='\033[0;34m'         # Blue
PURPLE='\033[0;35m'       # Purple
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'         # Cyan
GRAY='\033[0;37m'         # ${GRAY}      # серый цвет знаков
DGRAY='\033[1;30m'        # ${DGRAY}

# High Intensity
LBLACK='\033[0;90m'       # Black
LRED='\033[0;91m'         # Red
LGREEN='\033[0;92m'       # Green
LYELLOW='\033[0;93m'      # Yellow
LBLUE='\033[0;94m'        # Blue
LPURPLE='\033[0;95m'	  # Purple
LMAGENTA='\033[0;95m'     # Magenta
LCYAN='\033[0;96m'        # Cyan
WHITE='\033[0;97m'        # White

# Bold
BBLACK='\033[1;30m'       # Black
BRED='\033[1;31m'         # Red
BGREEN='\033[1;32m'       # Green
BYELLOW='\033[1;33m'      # Yellow
BBLUE='\033[1;34m'        # Blue
BPURPLE='\033[1;35m'      # Purple
BMAGENTA='\033[1;35m'     # Magenta
BCYAN='\033[1;36m'        # Cyan
BWHITE='\033[1;37m'       # White

# Bold High Intensity
BIBLACK='\033[1;90m'      # Black
BIRED='\033[1;91m'        # Red
BIGREEN='\033[1;92m'      # Green
BIYELLOW='\033[1;93m'     # Yellow
BIBLUE='\033[1;94m'       # Blue
BIPURPLE='\033[1;95m'     # Purple
BIMAGENTA='\033[1;95m'    # Magenta
BICYAN='\033[1;96m'       # Cyan
BIWHITE='\033[1;97m'      # White

# Underline
UBLACK='\033[4;30m'       # Black
URED='\033[4;31m'         # Red
UGREEN='\033[4;32m'       # Green
UYELLOW='\033[4;33m'      # Yellow
UBLUE='\033[4;34m'        # Blue
UPURPLE='\033[4;35m'      # Purple
UMAGENTA='\033[4;35m'     # Magenta
UCYAN='\033[4;36m'        # Cyan
UWHITE='\033[4;37m'       # White

# Background
BGBLACK='\033[40m'        # Black
BGRED='\033[41m'          # Red
BGGREEN='\033[42m'        # Green
BGYELLOW='\033[43m'       # Yellow
BGBROWN='\033[43m'        # ${BGBROWN}
BGBLUE='\033[44m'         # Blue
BGPURPLE='\033[45m'       # Purple
BGMAGENTA='\033[45m'      # MAGENTA
BGCYAN='\033[46m'         # Cyan
BGWHITE='\033[47m'        # White
BGGRAY='\033[47m'         # GRAY
BGDEF='\033[49m'          # ${BGDEF}

# High Intensity backgrounds
HIBGBLACK='\033[0;100m'   # Black
HIBGRED='\033[0;101m'     # Red
HIBGGREEN='\033[0;102m'   # Green
HIBGYELLOW='\033[0;103m'  # Yellow
HIBGBLUE='\033[0;104m'    # Blue
HIBGPURPLE='\033[0;105m'  # Purple
HIBGMAGENTA='\033[0;105m' # Magenta
HIBGCYAN='\033[0;106m'    # Cyan
HIBGWHITE='\033[0;107m'   # White

TL=`tput lines`
TC=`tput cols`

ERR=${BYELLOW}${BGRED};   # for error message
INFO=${BGREEN}${BGBLUE};  # for info message

gX=0
gY=0

function gotoxy()
{
    echo -en "\033[$2;$1"; echo -en 'f'
}

function setcolor()
{
    echo -en "$1"
}

function setbackcolor()
{
    echo -en $1
}

function clrscr()
{
    echo -en $CLSTD
    clear
}

function outtextxy()
{
    gotoxy $1 $2
	echo -en "$3"
}

function _outtextxy()
{
  gotoxy $1 $2 ;
  if [ -z "$4" ]; then format="%s";
  else format="$4"; fi
  echo "printf \"$format\" \"$3\"" | zsh
}

function strlen()
{
  local string="$1"
  local len=$(echo -en "$string" | wc -m)
  len="${len##*' '}";
  echo -en "$len"
}

function getxy()
{
  local pos
  IFS='[;' read -p $'\e[6n' -d R -a pos -rs || echo "failed with error: $? ; ${pos[*]}"
  gX="${pos[2]}"
  gY="${pos[1]}"
}


function getcursorxy()
{
  local pos
  IFS='[;' read -p $'\e[6n' -d R -a pos -rs || echo "failed with error: $? ; ${pos[*]}"
  gX=${pos[2]}
  gY=${pos[1]}
}
